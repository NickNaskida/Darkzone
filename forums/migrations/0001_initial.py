# Generated by Django 3.1.7 on 2021-08-18 12:46

import ckeditor_uploader.fields
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=25)),
                ('category_description', models.CharField(blank=True, max_length=80)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryThreads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_thread_name', models.CharField(max_length=25, null=True, unique=True)),
                ('category_thread_description', models.CharField(blank=True, max_length=60, null=True)),
                ('category_thread_type', models.CharField(max_length=20, null=True)),
                ('category_thread_slug', models.SlugField(null=True, unique=True)),
                ('category_thread_icon', models.CharField(max_length=60, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='thread_category', to='forums.categories')),
            ],
            options={
                'verbose_name': 'Main Thread',
                'verbose_name_plural': 'Main Threads',
                'permissions': [('view_private_thread', 'Can view private thread')],
            },
        ),
        migrations.CreateModel(
            name='TagColors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_color', colorfield.fields.ColorField(default='#FFFFFF', max_length=18)),
            ],
            options={
                'verbose_name': 'Tag Color',
                'verbose_name_plural': 'Tag Colors',
            },
        ),
        migrations.CreateModel(
            name='ThreadPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_title', models.CharField(max_length=60, null=True, unique=True)),
                ('post_slug', models.SlugField(null=True, unique=True)),
                ('post_date', models.DateTimeField(null=True)),
                ('post_prefix', models.CharField(max_length=20, null=True)),
                ('post_status', models.CharField(max_length=20, null=True)),
                ('post_body', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_posts', to=settings.AUTH_USER_MODEL)),
                ('post_likes', models.ManyToManyField(blank=True, related_name='user_likes', to=settings.AUTH_USER_MODEL)),
                ('post_tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('thread', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='thread_posts', to='forums.categorythreads')),
            ],
            options={
                'verbose_name': 'Thread Post',
                'verbose_name_plural': 'Thread Posts',
                'permissions': [('change_status', 'Moder can change post status'), ('moder_post_delete', 'Moder can delete post')],
            },
        ),
        migrations.CreateModel(
            name='PostReplys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_date', models.DateTimeField(null=True)),
                ('reply_body', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_replies', to='forums.threadposts')),
                ('reply_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_replies', to=settings.AUTH_USER_MODEL)),
                ('reply_likes', models.ManyToManyField(blank=True, related_name='user_reply_likes', to=settings.AUTH_USER_MODEL)),
                ('reply_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forums.postreplys')),
            ],
            options={
                'verbose_name': 'Post Reply',
                'verbose_name_plural': 'Post Replys',
                'permissions': [('moder_reply_delete', 'Moder can delete reply')],
            },
        ),
    ]
